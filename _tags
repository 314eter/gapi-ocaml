<tools/*.ml>: syntax_camlp4o
"src/test/testMonadic.ml": syntax_camlp4o
"tools/serviceGenerator.byte": debug
# Disable warning 23 (Useless record "with" clause) for generated modules
<src/gapi/gapi*Model.ml>: warn(-x)
# Disable warning 3 (Deprecated feature), and 58 (Missing cmx file) for
# compatibility with old compilers
<src/gapi/*.ml>: warn(-d-58)
<src/gdata/*.ml>: warn(-d-58)

# OASIS_START
# DO NOT EDIT (digest: 41046b81b4116502ba6064dbe7b830f3)
# Ignore VCS directories, you can use the same kind of rule outside
# OASIS_START/STOP if you want to exclude directories that contains
# useless stuff for the build process
true: annot, bin_annot
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library gapi-ocaml
"src/gapi/gapi-ocaml.cmxs": use_gapi-ocaml
<src/gapi/*.ml{,i,y}>: pkg_cryptokit
<src/gapi/*.ml{,i,y}>: pkg_curl
<src/gapi/*.ml{,i,y}>: pkg_extlib
<src/gapi/*.ml{,i,y}>: pkg_netstring
<src/gapi/*.ml{,i,y}>: pkg_str
<src/gapi/*.ml{,i,y}>: pkg_yojson
# Library gdata
"src/gdata/gdata.cmxs": use_gdata
<src/gdata/*.ml{,i,y}>: pkg_cryptokit
<src/gdata/*.ml{,i,y}>: pkg_curl
<src/gdata/*.ml{,i,y}>: pkg_extlib
<src/gdata/*.ml{,i,y}>: pkg_netstring
<src/gdata/*.ml{,i,y}>: pkg_str
<src/gdata/*.ml{,i,y}>: pkg_xmlm
<src/gdata/*.ml{,i,y}>: pkg_yojson
<src/gdata/*.ml{,i,y}>: use_gapi-ocaml
# Executable serviceGenerator
"tools/serviceGenerator.byte": pkg_cryptokit
"tools/serviceGenerator.byte": pkg_curl
"tools/serviceGenerator.byte": pkg_extlib
"tools/serviceGenerator.byte": pkg_monad-custom
"tools/serviceGenerator.byte": pkg_netstring
"tools/serviceGenerator.byte": pkg_str
"tools/serviceGenerator.byte": pkg_yojson
"tools/serviceGenerator.byte": use_gapi-ocaml
<tools/*.ml{,i,y}>: pkg_cryptokit
<tools/*.ml{,i,y}>: pkg_curl
<tools/*.ml{,i,y}>: pkg_extlib
<tools/*.ml{,i,y}>: pkg_monad-custom
<tools/*.ml{,i,y}>: pkg_netstring
<tools/*.ml{,i,y}>: pkg_str
<tools/*.ml{,i,y}>: pkg_yojson
<tools/*.ml{,i,y}>: use_gapi-ocaml
# Executable oauth2Flow
"examples/auth/oauth2Flow.byte": pkg_cryptokit
"examples/auth/oauth2Flow.byte": pkg_curl
"examples/auth/oauth2Flow.byte": pkg_extlib
"examples/auth/oauth2Flow.byte": pkg_nethttpd
"examples/auth/oauth2Flow.byte": pkg_netstring
"examples/auth/oauth2Flow.byte": pkg_str
"examples/auth/oauth2Flow.byte": pkg_xmlm
"examples/auth/oauth2Flow.byte": pkg_yojson
"examples/auth/oauth2Flow.byte": use_gapi-ocaml
"examples/auth/oauth2Flow.byte": use_gdata
<examples/auth/*.ml{,i,y}>: pkg_xmlm
<examples/auth/*.ml{,i,y}>: use_gdata
# Executable oauth1Flow
"examples/auth/oauth1Flow.byte": pkg_cryptokit
"examples/auth/oauth1Flow.byte": pkg_curl
"examples/auth/oauth1Flow.byte": pkg_extlib
"examples/auth/oauth1Flow.byte": pkg_nethttpd
"examples/auth/oauth1Flow.byte": pkg_netstring
"examples/auth/oauth1Flow.byte": pkg_str
"examples/auth/oauth1Flow.byte": pkg_yojson
"examples/auth/oauth1Flow.byte": use_gapi-ocaml
# Executable clientLoginFlow
"examples/auth/clientLoginFlow.byte": pkg_cryptokit
"examples/auth/clientLoginFlow.byte": pkg_curl
"examples/auth/clientLoginFlow.byte": pkg_extlib
"examples/auth/clientLoginFlow.byte": pkg_nethttpd
"examples/auth/clientLoginFlow.byte": pkg_netstring
"examples/auth/clientLoginFlow.byte": pkg_str
"examples/auth/clientLoginFlow.byte": pkg_yojson
"examples/auth/clientLoginFlow.byte": use_gapi-ocaml
<examples/auth/*.ml{,i,y}>: pkg_cryptokit
<examples/auth/*.ml{,i,y}>: pkg_curl
<examples/auth/*.ml{,i,y}>: pkg_extlib
<examples/auth/*.ml{,i,y}>: pkg_nethttpd
<examples/auth/*.ml{,i,y}>: pkg_netstring
<examples/auth/*.ml{,i,y}>: pkg_str
<examples/auth/*.ml{,i,y}>: pkg_yojson
<examples/auth/*.ml{,i,y}>: use_gapi-ocaml
# Executable refreshOAuth2Token
"src/test/refreshOAuth2Token.byte": pkg_cryptokit
"src/test/refreshOAuth2Token.byte": pkg_curl
"src/test/refreshOAuth2Token.byte": pkg_extlib
"src/test/refreshOAuth2Token.byte": pkg_netstring
"src/test/refreshOAuth2Token.byte": pkg_oUnit
"src/test/refreshOAuth2Token.byte": pkg_str
"src/test/refreshOAuth2Token.byte": pkg_yojson
"src/test/refreshOAuth2Token.byte": use_gapi-ocaml
# Executable test_suite
"src/test/testSuite.byte": pkg_cryptokit
"src/test/testSuite.byte": pkg_curl
"src/test/testSuite.byte": pkg_extlib
"src/test/testSuite.byte": pkg_monad-custom
"src/test/testSuite.byte": pkg_netstring
"src/test/testSuite.byte": pkg_oUnit
"src/test/testSuite.byte": pkg_str
"src/test/testSuite.byte": pkg_xmlm
"src/test/testSuite.byte": pkg_yojson
"src/test/testSuite.byte": use_gapi-ocaml
"src/test/testSuite.byte": use_gdata
<src/test/*.ml{,i,y}>: pkg_cryptokit
<src/test/*.ml{,i,y}>: pkg_curl
<src/test/*.ml{,i,y}>: pkg_extlib
<src/test/*.ml{,i,y}>: pkg_monad-custom
<src/test/*.ml{,i,y}>: pkg_netstring
<src/test/*.ml{,i,y}>: pkg_oUnit
<src/test/*.ml{,i,y}>: pkg_str
<src/test/*.ml{,i,y}>: pkg_xmlm
<src/test/*.ml{,i,y}>: pkg_yojson
<src/test/*.ml{,i,y}>: use_gapi-ocaml
<src/test/*.ml{,i,y}>: use_gdata
# OASIS_STOP
